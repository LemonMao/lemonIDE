export PATH=$PATH:/usr/local/bin/:~/.vim/lemon-tool/:/usr/local/share/gtags/script:/usr/lib/python3/dist-packages/:/usr/local/bin/lmao:~/usr/bin/:~/.local/bin/
#export PWD=/ifs/home/lmao
git config --global core.pager 'less -FMRX'

####################
# Environments
###################
#API key
export GEMINI_API_KEY=""
# set for WSL web browser
export BROWSER=wslview

# man colorful
#export LESS_TERMCAP_mb=$'\E[1m\E[32m'
#export LESS_TERMCAP_mh=$'\E[2m'
#export LESS_TERMCAP_mr=$'\E[7m'
#export LESS_TERMCAP_md=$'\E[1m\E[36m'
#export LESS_TERMCAP_ZW=""
#export LESS_TERMCAP_us=$'\E[4m\E[1m\E[37m'
#export LESS_TERMCAP_me=$'\E(B\E[m'
#export LESS_TERMCAP_ue=$'\E[24m\E(B\E[m'
#export LESS_TERMCAP_ZO=""
#export LESS_TERMCAP_ZN=""
#export LESS_TERMCAP_se=$'\E[27m\E(B\E[m'
#export LESS_TERMCAP_ZV=""
#export LESS_TERMCAP_so=$'\E[1m\E[33m\E[44m'
export LESS_TERMCAP_so=$'\033[43;37;1;4m'
export LESS_TERMCAP_se=$'\e[0m'

# Colorize supported commands
cmds=(as ant blkid cc configure curl cvs df diff dig dnf
 du env fdisk findmnt free g++ gas gcc getfacl getsebool gmake
 id ifconfig iostat ip iptables iwconfig journalctl kubectl last ldap lolcat ld
 lsattr lsblk lsmod lsof lspci make mount mtr mvn netstat nmap ntpdate php ping
 ping6 proftpd ps sar semanage sensors showmount sockstat ss stat sysctl systemctl
 tcpdump traceroute traceroute6 tune2fs ulimit uptime vmstat wdiff whois)
cmds2=(ls docker docker-machine docker-compose)

for cmd in "${cmds[@]}"; do
    which $cmd >/dev/null 2>&1 && alias $cmd="grc --colour=auto $cmd \$@"
done
for cmd in "${cmds2[@]}"; do
    which $cmd >/dev/null 2>&1 && alias "c$cmd"="grc --colour=auto $cmd \$@"
done

# ccat file
function ccat() {
    cat "$@" | grcat conf.lemon.log | less
}

function cgrep() {
    grep "$@" | grcat conf.lemon.log | less
}

# wget2 https://x.x.x.x/path/file
function wget2() {
    cmd="curl -k "$@" -o ./"$(basename "$@")""
    $cmd
}

function grc2() {
    $@ | grcat conf.lemon.log | less
}

# Lemon Aliases
alias lsalias="cat ~/.bash_aliases | grep -A 1000 'Lemon Aliases' | grep alias"
alias ll="ls -lthr"
alias ld="ls -lthr -F | grep /$"
alias la="ls -lathr"
alias tmnew="tmux -2 new \; new-window \; new-window \; new-window \; new-window \; new-window \; rename-session "
alias tmls="tmux ls"
alias tmat="tmux -2 att -t "
alias apt="sudo apt "
alias lxc="sudo lxc "
#alias docker="sudo /usr/bin/docker "
alias serfind='sudo systemctl list-units | grep '
alias serlist='sudo systemctl list-units'
#which duf >/dev/null 2>&1 && alias df="duf -hide special -style ascii || df -h"
alias lscrt="openssl x509 -noout -text -in "

alias lsip="ifconfig | grep inet | sort | uniq | awk '{print(\"\033[0m\" \$1 \" - \" \"\033[31m\" \$2)}'"
alias lsip="ifconfig | grep -e \"^[a-z]\" -e \"inet\" | \
            awk '{if (\$1==\"inet\" || \$1==\"inet6\") printf(\"%s %s\n\",\$2,dev); else dev = \$1}' |\
            sort | uniq | awk '{printf(\"\033[0m%-13s  - \033[31m%s\n\",\$2,\$1)}'"
alias lscpu="cat /proc/cpuinfo | grep 'model name' | uniq;\
             cat /proc/cpuinfo | grep 'cpu cores' | sort | uniq;\
             cat /proc/cpuinfo | grep 'siblings' | sort | uniq;\
             total=`cat /proc/cpuinfo | grep processor | uniq | wc -l` && \
             echo -e '\ntotal logical cores: ${total}';\
             "
alias lstime="awk '{now=strftime(\"%T \");sub(/^/, now);print}'"
alias spellcheck="codespell -i3 -w $(git status --porcelain | grep -v '^??' | awk '{print $2}')"
alias whichl='f(){ which "$@" | xargs grc --colour=auto ls -l; unset -f f; }; f'
alias lstopfile="find . -type f -print0 | xargs -0 du -hs | sort -rh | head -n 10"

function gitupdate() {
  # Check if two arguments are provided
  if [ $# -ne 2 ]; then
    echo "Usage: $0 <remote> <branch>"
    exit 1
  fi

  # Get the remote and branch name from arguments
  remote="$1"
  branch="$2"

  echo "Updating branch '$branch' from remote '$remote'..."
  git checkout "$branch" && git fetch "$remote" "$branch" && git merge --ff-only "$remote/$branch"

  # Check if the merge was successful
  if [ $? -eq 0 ]; then
    echo "Merge successful!"
  else
    echo "Merge failed! Please check for conflicts and resolve them manually."
  fi
}


# project aliases
alias gonefs="cd ~/onefs"
alias vonefs="cd ~/onefs ; vim"
alias bonefs="sudo docker container run --name onefs_build --mount type=bind,source=/home/lmao/project/onefs,target=/onefs,readonly -e DESKTOP=lmao -i -t docker.west.isilon.com/cclayton/docker-onefs-cross:latest"
alias conefs="rm -rf ~/"
